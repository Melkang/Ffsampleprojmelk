@layer reset, base, utilities, layout;

/* the reset here*/
@layer reset {
  *,
  *::before,
  *::after {
    box-sizing: border-box;
  }

  /* in mobile landscape mode, it won't change text size
    https://kilianvalkhof.com/2022/css-html/your-css-reset-needs-text-size-adjust-probably/ */
  html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
  }

  body,
  h1,
  h2,
  h3,
  h4,
  p,
  figure,
  blockquote,
  dl,
  dd {
    margin: 0;
  }

  /* Instead of ol and li, this is a modern approach to not read to screen readers the list
    https://www.scottohara.me/blog/2019/01/12/lists-and-safari.html */
  [role="list"] {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  body {
    min-block-size: 100vh;
    line-height: 1.6;
  }

  /*line height tighter for bigger sizes so we can manipulate padding if needed */
  h1,
  h2,
  h3,
  button,
  input,
  label {
    line-height: 1.1;
  }

  /*if a line of text shifts words to another line, this will balance the amount of words*/
  h1,
  h2,
  h3,
  h4 {
    text-wrap: balance;
  }

  /*large blocks of texts might create an orphan word, but this prevents it- as long as browser supports it*/
  p,
  li {
    text-wrap: pretty;
  }

  img,
  picture {
    max-inline-size: 100%;
    display: block;
  }

  input,
  button,
  textarea,
  select {
    font: inherit;
  }
}

/* :root custom properties + base/global styles here*/

@layer base {
  :root {
    /*darker shades are smaller numbers (ex: gray-100). Lighter shades are higher numbers (ex: brown-800) */
    --clr-white: hsl(0, 0%, 100%);
    --clr-gray-100: hsl(0, 2%, 79%);
    --clr-brand-400: hsl(25, 88%, 75%);
    --clr-brand-500: hsl(25, 88%, 66%);
    --clr-green-400: hsl(143, 19%, 49%);
    --clr-green-500: hsl(143, 38%, 37%);
    --clr-green-600: hsl(145, 29%, 19%);
    --clr-brown-500: hsl(10, 5%, 25%);
    --clr-brown-600: hsl(9, 7%, 21%);
    --clr-brown-700: hsl(9, 8%, 16%);
    --clr-brown-800: hsl(0, 6%, 15%);
    --clr-brown-900: hsl(0, 6%, 13%);

    --clr-orange-500: hsl(28, 43%, 28%);
    --clr-red-500: hsl(359, 34%, 24%);
    --clr-teal-500: hsl(186, 42%, 25%);

    /*Family Fonts: /*fira sans and outfit font*/
    --ff-heading: "Outfit", sans-serif;
    --ff-body: "Fira Sans", sans-serif;

    /*smaller font sizes are smaller numbers (ex: --fs-300: 0.875rem). larger font sizes are higher numbers (ex: --fs-900: 3.75rem). ALso changed figma design from px to rem units for accessibility/ user preferences when they have changed screen sizing. If keeping px, it might override user preferences */
    /*Font Sizes*/
    --fs-300: 0.875rem;
    --fs-400: 1rem;
    --fs-500: 1.125rem;
    --fs-600: 1.25rem;
    --fs-700: 1.5rem;
    --fs-800: 2rem;
    --fs-900: 3.75rem;
    --fs-1000: 3.75rem;

    @media (width > 760px) {
      --fs-300: 0.875rem;
      --fs-400: 1rem;
      --fs-500: 1.25rem;
      --fs-600: 1.5rem;
      --fs-700: 2rem;
      --fs-800: 3rem;
      --fs-900: 5rem;
      --fs-1000: 7.5rem;
    }
  }

  :root {
    /* primitives here - description by purpose*/
    --text-main: var(--clr-gray-100);
    --text-high-contrast: var(--clr-white);
    --text-brand: var(--clr-brand-500);
    --text-brand-light: var(--clr-brand-400);

    --background-accent-light: var(--clr-green-400);
    --background-accent-main: var(--clr-green-500);
    --background-accent-dark: var(--clr-green-600);

    --background-extra-light: var(--clr-brown-500);
    --background-light: var(--clr-brown-600);
    --background-main: var(--clr-brown-700);
    --background-dark: var(--clr-brown-800);
    --background-extra-dark: var(--clr-brown-900);

    --font-size-heading-sm: var(--fs-700);
    --font-size-heading-regular: var(--fs-800);
    --font-size-heading-lg: var(--fs-900);
    --font-size-heading-xl: var(--fs-1000);

    --font-size-sm: var(--fs-300);
    --font-size-regular: var(--fs-400);
    --font-size-md: var(--fs-500);
    --font-size-lg: var(--fs-600);

    /*Other Variable Properties from the Design*/
    --border-radius-sm: 0.25rem;
    --border-radius-med: 0.5rem;
    --border-radius-lg: 0.75rem;

    /* Custom Properties*/
    html {
      font-family: var(--ff-body);
      line-height: 1.6rem;
    }

    body {
      font-family: var(--ff-body);
      font-size: var(--font-size-regular);
      color: var(--text-main);
      background-color: var(--background-main);
    }

    h1,
    h2,
    h3,
    h4 {
      font-family: var(--ff-heading) "Outfit", sans-serif;
      font-weight: 700;
      color: var(--text-high-contrast);
    }

    h1 {
      font-size: var(--font-size-heading-lg);
    }

    a {
      color: var(--text-high-contrast);
    }

    a:hover,
    a:focus-visible {
      color: var(--text-brand-light);
    }
  }
}

/*buttons are too short to describe in full the context. Utilities created for screen readers and assistive tech*/
@layer utilities {
  .visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
  }
}

/* limit the maximum width the content can reach and add custom properties because it shows up in multi spots*/
@layer layout {
  .wrapper {
    --wrapper-max-width: 1130px;
    --wrapper-padding: 1rem;

    max-width: var(--wrapper-max-width);
    margin-inline: auto;
    padding-inline: var(--wrapper-padding);
    /* helps to match the Figma file */
    box-sizing: content-box;
  }

  /*data attributes based on CUBE CSS styling. Easier to read in HTML. Can hook into with JS. The symbol & is a placeholder for the original selector (wrapper)*/
  &[data-type="narrow"] {
    --wrapper-max-width: 720px;
  }

  &[data-type="wide"] {
    --wrapper-max-width: 1330px;
  }

  @layer layout {
    .section {
      padding-block: 3.75rem;

      @media (min-width: 760px) {
        padding-block: 8rem;

        &[data-padding="compact"] {
          padding-block: 4.5rem;
        }
      }
    }
  }
}
